{
    "openapi": "3.0.0",
    "info": {
      "title": "Java Code test task API",
      "description": "This API simulates working with wallets",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost/api/v1"
      }
    ],
    "components": {
      "schemas": {
        "BaseSuccessResult": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "Success"
              ]
            }
          }
        },
        "FailResult": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "Fail"
              ]
            },
            "data": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "paths": {
      "/wallets/{walletId}": {
        "get": {
          "summary": "Return a balance of wallet",
          "parameters": [
            {
              "in": "path",
              "name": "walletId",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "If wallet exists",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseSuccessResult"
                      },
                      {
                        "type": "object"
                      },
                      {
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "walletBalance": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 9223372036854776000
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "If wallet does not exists",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FailResult"
                  }
                }
              }
            }
          }
        }
      },
      "/wallets": {
        "post": {
          "summary": "Create a wallet with zero balance and return its ID",
          "responses": {
            "200": {
              "description": "Always",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseSuccessResult"
                      },
                      {
                        "type": "object"
                      },
                      {
                        "properties": {
                          "status": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "walletId": {
                                "type": "string",
                                "format": "uuid"
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/wallet": {
        "post": {
          "summary": "Withdraw or deposit wallet and return its balance",
          "requestBody": {
            "required": true,
            "description": "If operationType is WITHDRAW, amount must be less than or equal to walletBalance, else - must be less than or equal to (9223372036854775807 - walletBalance)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "walletId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "operationType": {
                      "type": "string",
                      "enum": [
                        "DEPOSIT",
                        "WITHDRAW"
                      ]
                    },
                    "amount": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 9223372036854776000
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "If wallet exists and request body is valid",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BaseSuccessResult"
                      },
                      {
                        "type": "object"
                      },
                      {
                        "properties": {
                          "status": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "walletBalance": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 9223372036854776000
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "If wallet does not exists or request body is invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/FailResult"
                  }
                }
              }
            }
          }
        }
      }
    }
  }